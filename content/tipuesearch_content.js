var tipuesearch = {"pages": [{'title': 'About', 'text': '課程名稱: 協同產品設計實習 - Collaborative Product Design Practice \n 2a第3組網站:\xa0 https://mdecd2025.github.io/2a-ag3/ \n 2a第3組倉儲:\xa0 https://github.com/mdecd2025/2a-ag3 \n \n 課程代號: cd2025 \n Teams 線上教學: \n 以 "學號@nfu.edu.tw" 登入 \xa0 https://login.microsoftonline.com/ \xa0 Office 365 \n Teams 團隊代碼:\xa0 p5z4eku \n \n 課程評分: \n Homework (30%) - 每週至少提交兩次與課程進度有關的內容, 完成後填回自評表單 \n Exam (40%) - 建立包含操作流程影片、心得以及提供檔案下載的網頁後填回自評表單 \n Final Report (30%) - 利用網頁內容進行簡報並提交 pdf 格式書面報告, 完成後填回自評表單 \n', 'tags': '', 'url': 'About.html'}, {'title': 'Links', 'text': '網站 \n 41223138: https://mdecd2025.github.io/hw-41223138/content/index.html \n 41223140: https://mdecd2025.github.io/hw-41223140/content/index.html \n 41223143: https://mdecd2025.github.io/hw-41223143/content/index.html \n 41223144: https://mdecd2025.github.io/hw-41223144/content/index.html \n 倉儲 \n 41223138: https://github.com/mdecd2025/hw-41223138 \n 41223140: https://github.com/mdecd2025/hw-41223140 \n 41223143: https://github.com/mdecd2025/hw-41223143 \n 41223144: https://github.com/mdecd2025/hw-41223144 \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n', 'tags': '', 'url': 'Links.html'}, {'title': 'Week', 'text': '', 'tags': '', 'url': 'Week.html'}, {'title': 'w3', 'text': '各組員網站及倉儲程式碼 \n # 從  Brython 程式庫中的 browser 導入 html, 可用來輸出超文件內容\n# 而所導入的 document 可以指向網頁中的特定 id 內容\nfrom browser import html, document\n# 建立 url 變數與網站中 2a 學員的學號與帳號資料 URL 網誌字串對應\nurl = "https://mde.tw/list/2a.txt"\n# 利用 open() 物件中的 readlines() 方法, 取出網站中的資料並逐行放入數列中, 因此 data 的資料型別為數列\ndata = open(url).readlines()\n# 進行資料查驗時, 印出 data 數列內容\n#print(data)\n# 因為學員資料中的第一列為標題, 因此有效資料從索引值 1 開始\nall_stud = data[1:]\n# 利用 len() 函式查驗 all_stud 數列有幾筆資料, 因為要與前後的字串併接, 因此利用 str() 將整數轉為字串\nprint("總共有 " + str(len(all_stud)) + "名學員")\n# \n# 利用 document[] 取得 id 為 "brython_div1" 的位置, 然後與 brython_div1 變數對應\nbrython_div1 = document["brython_div1"]\n# 利用 Brython 的 "<=" 特殊符號, 將右值帶有字串與超文件內容物件插入 brython_div1 變數所指定的位置\n# 其中利用 html.A 建立 anchor 標註物件, 第一個變數為 anchor 字串, 第二個變數則為 hyper text reference\nbrython_div1 <= "1. " + html.A("2a-ag3", href="https://mdecd2025.github.io/2a-ag3/")+ html.A("(repo)", href="https://github.com/mdecd2025/2a-ag3")\n# 利用 html.BR() 插入 break 標註\nbrython_div1 <= html.BR()\nbrython_div1 <= "2. " + html.A("41223138", href="https://mdecd2025.github.io/hw-41223138/")+ html.A("(repo)", href="https://github.com/mdecd2025/hw-41223138")\nbrython_div1 <= html.BR()\nbrython_div1 <= "3. " + html.A("41223140", href="https://mdecd2025.github.io/hw-41223140/")+ html.A("(repo)", href="https://github.com/mdecd2025/hw-41223140")\nbrython_div1 <= html.BR()\nbrython_div1 <= "4. " + html.A("41223143", href="https://mdecd2025.github.io/hw-41223143/")+ html.A("(repo)", href="https://github.com/mdecd2025/hw-41223143")\nbrython_div1 <= html.BR()\nbrython_div1 <= "5. " + html.A("41223144", href="https://mdecd2025.github.io/hw-41223144/")+ html.A("(repo)", href="https://github.com/mdecd2025/hw-41223144")\n \n 1.\xa0 2a-ag3 (repo) 2.\xa0 41223138 (repo) 3.\xa0 41223140 (repo) 4.\xa0 41223143 (repo) 5.\xa0 41223144 (repo) \n', 'tags': '', 'url': 'w3.html'}, {'title': 'w5', 'text': '', 'tags': '', 'url': 'w5.html'}, {'title': 'Webots Tutorial', 'text': '1.繁體中文詳細說明 \n What is Webots? Webots 是一款專業的移動機器人模擬軟體。它提供了一個快速原型開發環境，使用者可以在其中創建具有物理屬性（例如質量、關節、摩擦係數等）的 3D 虛擬世界。使用者可以在這些虛擬世界中加入簡單的被動物體或稱為移動機器人的主動物體。這些移動機器人可以擁有不同的運動方式，例如輪式機器人、四足機器人或飛行機器人。此外，這些機器人還可以配備各種感測器和驅動裝置，例如距離感測器、驅動輪、攝像頭、馬達、觸摸感測器、發射器、接收器等。 \n 在 Webots 中，使用者可以為每個機器人編寫程式，讓它們展現所需的行為。Webots 還提供了大量的機器人模型和控制程式範例，幫助使用者更容易入門和開始使用。 \n 此外，Webots 還具有與真實移動機器人連接的介面功能。一旦您在模擬環境中使機器人的行為達到預期，就可以將其控制程式轉移到真實的機器人上，例如 e-puck、DARwIn-OP、Nao 等。Webots 系統還支持通過相關介面添加新的實體機器人接口。 \n 總結來說，Webots 是一個強大且靈活的模擬工具，適用於機器人研究、開發和教育領域，能夠幫助使用者設計和測試各種機器人系統，並將其應用於真實世界中的實際機器人。 \n What can I do with Webots? Webots 非常適合用於與移動機器人相關的研究和教育項目，許多移動機器人項目多年來一直依賴 Webots，並且應用於以下領域： \n 移動機器人原型開發：包括學術研究、汽車產業、航空產業、吸塵器產業、玩具產業、以及愛好者等，Webots 提供了一個方便的環境來進行機器人原型設計和測試。 \n 機器人運動研究：適用於不同類型的機器人運動研究，如四足機器人、仿人機器人、腿式機器人等，幫助開發更靈活或更高效的移動方式。 \n 多機器人協作研究：Webots 可用於群體智能、協作機器人群組等多代理研究，探索多機器人之間的協同工作和智能行為。 \n 自適應行為研究：支持遺傳算法、神經網絡、人工智慧等技術，讓使用者能研究如何讓機器人根據環境或情況自我調整行為。 \n 機器人教育：Webots 也廣泛應用於教學領域，支援機器人學、程式設計（C/C++/Java/Python）等課程，幫助學生實踐和學習機器人技術。 \n 機器人競賽：Webots 可用於準備和參加各類機器人競賽，例如 Robotstadium 或 Rat\'s Life 等競賽，讓參賽者進行機器人設計與測試。 \n What do I need to know to use Webots? 要編寫自己的機器人控制器，需要具備 C、C++、Java、Python 或 MATLAB 程式語言的基本知識。但是，即使您不懂這些語言，您仍然可以使用名為 BotStudio 的簡單圖形程式語言對 e-puck 和 Hemisson 機器人進行程式設計。如果您不想使用 Webots 中提供的現有機器人模型，而想要創建自己的機器人模型，或在模擬環境中添加特殊對象，您將需要具備 3D 電腦圖形學和 VRML97 描述語言的基本知識。這將允許您在 Webots 中建立 3D 模型或從 3D 建模軟體中匯入它們。 \n How do I get User Support? Cyberbotics透過其 Premier Service 計劃和客製化開發服務提供付費用戶支援。各個地方也提供社區支持，但是，不能保證您一定能得到問題的答案：帶有標籤的Robotics StackExchangewebots可能是詢問有關 Webots 的技術問題的最佳場所。GitHub Discussions可用於詢問與 Webots 及其文件的開發相關的問題。GitHub Issues僅用於報告在 Webots 中發現的錯誤。Discord可用於與 Webots 社群快速提問和自發性討論。 \n Webots Simulation 一個 Webots 世界檔案（.wbt），定義了其中一個或多個機器人及其環境。該 .wbt 檔案有時會依賴外部的 PROTO 檔案（.proto）和材質貼圖。 一個或多個控制程式，用於控制上述機器人（可使用 C/C++/Java/Python/MATLAB 等語言編寫）。 一個可選的物理插件，用於修改 Webots 預設的物理行為（使用 C/C++ 編寫）。 \n What is a World? 在 Webots 中，世界是對機器人及其環境屬性的 3D 描述。它包含每個物體的描述：位置、方向、幾何形狀、外觀（如顏色或亮度）、物理屬性、物體類型等。世界是以層次結構組織的，物體可以包含其他物體（類似於 VRML97）。例如，一個機器人可以包含兩個輪子、一個距離感測器和一個關節，而該關節本身又可以包含一個攝像頭等。世界檔案不包含機器人的控制程式碼；它只指定每個機器人所需的控制器名稱。世界檔案會儲存在 ".wbt" 檔案中，這些 ".wbt" 檔案會存儲在每個 Webots 專案的 "worlds" 子目錄中。 \n What is a Controller? 控制器是用來控制在世界檔案中指定的機器人的電腦程式。控制器可以使用 Webots 支援的任何程式語言編寫：C、C++、Java、Python 或 MATLAB。當模擬開始時，Webots 會啟動指定的控制器，每個控制器作為一個獨立的進程運行，並將這些控制器進程與模擬中的機器人相關聯。需要注意的是，雖然多個機器人可以使用相同的控制程式碼，但每個機器人會啟動一個獨立的進程。一些程式語言需要編譯（如 C 和 C++），其他語言則需要解釋執行（如 Python 和 MATLAB），還有一些語言需要既編譯又解釋執行（如 Java）。例如，C 和 C++ 控制器會編譯成平台依賴的二進位執行檔（例如 Windows 下的 ".exe" 檔案）。Python 和 MATLAB 控制器由相應的執行時系統解釋執行（這些系統必須已安裝）。Java 控制器需要先編譯成位元碼（".class" 檔案或 ".jar" 檔案），然後由 Java 虛擬機解釋執行。每個控制器的原始檔案和二進位檔案會一起儲存在控制器目錄中。控制器目錄位於每個 Webots 專案的 "controllers" 子目錄中。 \n What is a Supervisor Controller? Supervisor 控制器是設置為 TRUE 的機器人監控欄位的控制器，它可以執行通常只有人類操作員才能進行的操作，而非真實機器人能執行的操作。Supervisor 控制器可以使用上述任何程式語言編寫。然而，與一般的機器人控制器不同，Supervisor 控制器擁有對特權操作的存取權。這些特權操作包括模擬控制，例如將機器人移動到隨機位置、進行模擬的視頻捕捉等。 \n 2. 整理 重要的英文單字與用法, 並且針對其中所使用的英文文法逐句說明. \n Present Simple Tense : \n "Webots is a professional mobile robot simulation software package." \n "It offers a rapid prototyping environment." \n "The user can add simple passive objects." \n "These robots can have different locomotion schemes." \n \n Modal Verbs : \n "can" (e.g., "The user can program each robot individually.") \n "may" (e.g., "They may be equipped with a number of sensor and actuator devices.") \n "will" (e.g., "Webots will launch the specified controllers.") \n Relative Clauses : \n Webots is a professional mobile robot simulation software package that offers a rapid prototyping environment." \n "A world, in Webots, is a 3D description of the properties of robots and of their environment." \n Passive Voice : \n The user is given a chance to add simple passive objects." \n "The world file is saved in ".wbt" files." \n Infinitive Phrases : \n to create 3D virtual worlds with physics properties." \n "to exhibit the desired behavior." \n "to modify Webots regular physics behavior." \n Noun Phrases : \n Webots world file (.wbt) that defines one or several robots." \n "A basic knowledge of the C, C++, Java, Python, or MATLAB programming language is necessary \n Conditional Sentences : \n "If you don\'t want to use existing robot models... you will need a basic knowledge of 3D computer graphics."." \n Adjectives and Adverbs : \n Rapid prototyping environment." \n "Simple graphical programming language." \n "Quick questions and spontaneous discussions." \n Prepositional Phrases : \n "In the toy industry." \n "In C/C++/Java/Python programming lectures." \n "In Webots." \n Gerunds : \n "Adding new interfaces is possible." \n "Teaching robotics." \n \n \n 3.webots摘要 \n What is Webots? \n Webots is a professional mobile robot simulation software that allows users to create 3D virtual worlds with physics properties like mass, friction, and joints. Users can add robots with various locomotion types (wheeled, legged, flying) and equip them with sensors and actuators (e.g., cameras, motors). It also supports programming robots for specific behaviors, with many models and examples to assist users. Webots can interface with real robots, allowing control programs to be transferred from simulation to real-world robots. \n What can I do with Webots? \n Webots is suitable for research and educational projects in mobile robotics, including: \n \n Mobile robot prototyping \n Locomotion research (e.g., legged or humanoid robots) \n Multi-agent and swarm intelligence research \n Adaptive behavior and AI research \n Teaching robotics \n Robot contests \n \n What do I need to know to use Webots? \n To develop simulations in Webots, users need basic knowledge of C, C++, Java, Python, or MATLAB for programming robot controllers. Additionally, knowledge of 3D graphics and VRML97 may be needed for creating custom robot models or objects. \n How do I get User Support? \n Cyberbotics offers paid support through Premier Service plans, while community-based support is available through platforms like Robotics StackExchange, GitHub Discussions, and Discord. \n Webots Simulation Components: \n \n World File (.wbt): \xa0 Defines robots and their environment. \n Controller Programs: \xa0 Written in supported languages (C/C++, Java, Python, MATLAB). \n Physics Plugin (optional): \xa0 Modifies regular physics behavior. \n \n What is a World? \n A world in Webots is a 3D description of robots and their environment, including properties like position, appearance, and physical attributes. World files do not contain controller code but specify the name of the required controller for each robot. \n What is a Controller? \n A controller is a program that controls a robot in the world file. It can be written in C, C++, Java, Python, or MATLAB. When the simulation starts, Webots launches each controller as a separate process associated with the respective robots. The source and binary files are stored in a controller directory within the project. \n What is a Supervisor Controller? \n A Supervisor controller is a special type of controller with enhanced capabilities. It controls robots with a supervisor field set to TRUE, allowing privileged operations such as moving robots to random positions or making video captures of the simulation. \n 4.wbots重要單字及用法 \n \n \n Simulation（仿真） \n \n 解釋 ：模擬真實世界過程或系統的操作。 \n 用法 ："Webots is a professional mobile robot simulation software."（Webots 是一款專業的移動機器人仿真軟體。） \n \n \n \n Prototype（原型） \n \n 解釋 ：從中開發出其他形式的產品的初始模型或版本。 \n 用法 ："Webots is well suited for research and educational projects related to mobile robotics, including mobile robot prototyping."（Webots 非常適合用於與移動機器人相關的研究和教育項目，包括移動機器人原型製作。） \n \n \n \n Locomotion（運動） \n \n 解釋 ：從一個地方到另一個地方移動的能力或行為。 \n 用法 ："These robots can have different locomotion schemes (wheeled robots, legged robots, or flying robots)."（這些機器人可以有不同的運動方式（如輪式機器人、腿式機器人或飛行機器人）。） \n \n \n \n Actuator（執行器） \n \n 解釋 ：負責移動或控制機械裝置或系統的設備。 \n 用法 ："They may be equipped with a number of sensor and actuator devices, such as distance sensors, drive wheels, cameras, motors, touch sensors, emitters, receivers, etc."（它們可能配備多種傳感器和執行器設備，如距離傳感器、驅動輪、攝像頭、電動機、觸摸傳感器、發射器、接收器等。） \n \n \n \n Interface（介面） \n \n 解釋 ：兩個系統、學科或組織相互作用的點。 \n 用法 ："Webots also contains a number of interfaces to real mobile robots..."（Webots 還包含多個與真實移動機器人接口的功能...） \n \n \n \n Behavior（行為） \n \n 解釋 ：機器人或系統響應命令或與環境互動的方式。 \n 用法 ："Finally, the user can program each robot individually to exhibit the desired behavior."（最後，用戶可以為每個機器人單獨編程，表現出所需的行為。） \n \n \n \n Physics（物理） \n \n 解釋 ：研究物質和能量的本質及其相互關係的科學領域。 \n 用法 ："Webots offers a rapid prototyping environment, that allows the user to create 3D virtual worlds with physics properties such as mass, joints, friction coefficients, etc."（Webots 提供一個快速原型製作環境，允許用戶創建具有物理屬性（如質量、關節、摩擦係數等）的 3D 虛擬世界。） \n \n \n \n Model（模型） \n \n 解釋 ：用於理解或模擬現實世界對等物的系統或物體。 \n 用法 ："Webots contains a large number of robot models and controller program examples to help users get started."（Webots 包含大量的機器人模型和控制程式範例，以幫助用戶入門。） \n \n \n \n Controller（控制器） \n \n 解釋 ：在仿真中控制機器人或系統的程式。 \n 用法 ："A controller is a computer program that controls a robot specified in a world file."（控制器是控制在世界檔案中指定的機器人的電腦程式。） \n \n \n \n Supervisor（主管） \n \n 解釋 ：一種特殊的控制器，具有比普通控制器更多的權限。 \n 用法 ："The Supervisor controller is the controller of a Robot whose supervisor field is set to TRUE..."（主管控制器是控制一個設置了主管欄位為 TRUE 的機器人的控制器。） \n \n \n \n Privilege（特權） \n \n 解釋 ：賦予用戶或系統的特殊權限或優勢。 \n 用法 ："The Supervisor controller will have access to privileged operations."（主管控制器將可以訪問特權操作。） \n \n \n \n Plugin（插件） \n \n 解釋 ：一種可以增加功能的軟體元件。 \n 用法 ："An optional physics plugin that can be used to modify Webots regular physics behavior."（一個可選的物理插件，用來修改 Webots 常規的物理行為。） \n \n \n \n Hierarchy（層級） \n \n 解釋 ：專案或物件按等級或層次排列的系統或結構。 \n 用法 ："Worlds are organized as hierarchical structures where objects can contain other objects..."（世界被組織為層級結構，其中物件可以包含其他物件...） \n \n \n \n Prototype File (.proto)（原型檔案） \n \n 解釋 ：Webots 中用於定義可重用物件模型及其屬性的檔案格式。 \n 用法 ："The .wbt file does sometimes depend on external PROTO files (.proto) and textures."（.wbt 檔案有時依賴外部的 PROTO 檔案（.proto）和紋理。） \n \n \n \n Environment（環境） \n \n 解釋 ：機器人操作的周圍條件或背景。 \n 用法 ："A world in Webots is a 3D description of the properties of robots and of their environment."（Webots 中的世界是對機器人及其環境屬性的 3D 描述。） \n \n \n \n Privilege Operations（特權操作） \n \n 解釋 ：通常只能由人類操作員執行的操作，主管控制器可以執行這些操作。 \n 用法 ："The privileged operations include simulation control, for example, moving the robots to a random position, making a video capture of the simulation, etc."（特權操作包括仿真控制，例如將機器人移動到隨機位置，進行仿真視頻捕捉等。） \n \n \n \n Custom（定制的） \n \n 解釋 ：根據特定要求或偏好製作的。 \n 用法 ："Cyberbotics provides paid user support through its Premier Service plans and Custom Development services."（Cyberbotics 透過其高級服務計畫和定制開發服務提供付費用戶支持。） \n \n \n \n Community-Based（社群支持的） \n \n 解釋 ：基於用戶社群的支持或互動，而非商業服務。 \n 用法 ："Community-based support is also available in various places, however, there is no guarantee you will get an answer to your question."（社群支持也在多個地方提供，但不能保證你能得到答案。） \n \n \n \n Texture（紋理） \n \n 解釋 ：物體表面的質量或外觀。 \n 用法 ："The .wbt file does sometimes depend on external PROTO files (.proto) and textures."（.wbt 檔案有時依賴外部的 PROTO 檔案（.proto）和紋理。） \n \n \n \n 這些單字對於理解 Webots 及其組件、仿真過程非常重要。 \n', 'tags': '', 'url': 'Webots Tutorial.html'}, {'title': 'Final', 'text': '期末協同專案執行過程影片、簡報與 PDf 報告檔案 (六人一組) (30%) \n 題目:  Webots 動態投籃模擬系統的協同設計 \n 說明:  \n 籃框架被配置在一定範圍內, 可隨機慢速前進、後退及左右擺動, 投籃機構系統帶有一定數量的籃球, 被配置在可自由移動的輪車上. \n 操作者可利用鍵盤特定按鍵控制投籃輪車的移動並發射投籃, 每投出一球後系統透過記分板進行計分, 並由送球機構進行補球或移動輪車取球, 遊戲可進行至全部數量籃球投完為止. \n 請將期末協同專案執行過程、內容與心得, 製作成影片，配合字幕上傳至 Youtube 後嵌入各階段的期末報告頁面中. \n 影片標題:  國立虎尾科技大學 - 機械設計工程系 - cd2025 期末報告 - 學員學號 - 各階段影片主題 \n', 'tags': '', 'url': 'Final.html'}, {'title': 'Brython', 'text': '1 add to 100 \n # 從  Brython 程式庫中的 browser 導入 html, 可用來輸出超文件內容\n# 而所導入的 document 可以指向網頁中的特定 id 內容\nfrom browser import html, document\n# 建立 url 變數與網站中 2a 學員的學號與帳號資料 URL 網誌字串對應\nurl = "https://mde.tw/list/2a.txt"\n# 利用 open() 物件中的 readlines() 方法, 取出網站中的資料並逐行放入數列中, 因此 data 的資料型別為數列\ndata = open(url).readlines()\n# 進行資料查驗時, 印出 data 數列內容\n#print(data)\n# 因為學員資料中的第一列為標題, 因此有效資料從索引值 1 開始\nall_stud = data[1:]\n# 利用 len() 函式查驗 all_stud 數列有幾筆資料, 因為要與前後的字串併接, 因此利用 str() 將整數轉為字串\nprint("總共有 " + str(len(all_stud)) + "名學員")\n# \n# 利用 document[] 取得 id 為 "brython_div1" 的位置, 然後與 brython_div1 變數對應\nbrython_div1 = document["brython_div1"]\n# 利用 Brython 的 "<=" 特殊符號, 將右值帶有字串與超文件內容物件插入 brython_div1 變數所指定的位置\n# 其中利用 html.A 建立 anchor 標註物件, 第一個變數為 anchor 字串, 第二個變數則為 hyper text reference\nbrython_div1 <= "1. " + html.A("2a-ag3", href="https://mdecd2025.github.io/2a-ag3/")+ html.A("(repo)", href="https://github.com/mdecd2025/2a-ag3")\n# 利用 html.BR() 插入 break 標註\nbrython_div1 <= html.BR()\nbrython_div1 <= "2. " + html.A("41223138", href="https://mdecd2025.github.io/hw-41223138/")+ html.A("(repo)", href="https://github.com/mdecd2025/hw-41223138")\nbrython_div1 <= html.BR()\nbrython_div1 <= "3. " + html.A("41223140", href="https://mdecd2025.github.io/hw-41223140/")+ html.A("(repo)", href="https://github.com/mdecd2025/hw-41223140")\nbrython_div1 <= html.BR()\nbrython_div1 <= "4. " + html.A("41223143", href="https://mdecd2025.github.io/hw-41223143/")+ html.A("(repo)", href="https://github.com/mdecd2025/hw-41223143")\nbrython_div1 <= html.BR()\nbrython_div1 <= "5. " + html.A("41223144", href="https://mdecd2025.github.io/hw-41223144/")+ html.A("(repo)", href="https://github.com/mdecd2025/hw-41223144")\n\n \n  # 從  Brython 程式庫中的 browser 導入 html, 可用來輸出超文件內容\n# 而所導入的 document 可以指向網頁中的特定 id 內容\nfrom browser import html, document\n# 建立 url 變數與網站中 2a 學員的學號與帳號資料 URL 網誌字串對應\nurl = "https://mde.tw/list/2a.txt"\n# 利用 open() 物件中的 readlines() 方法, 取出網站中的資料並逐行放入數列中, 因此 data 的資料型別為數列\ndata = open(url).readlines()\n# 進行資料查驗時, 印出 data 數列內容\n#print(data)\n# 因為學員資料中的第一列為標題, 因此有效資料從索引值 1 開始\nall_stud = data[1:]\n# 利用 len() 函式查驗 all_stud 數列有幾筆資料, 因為要與前後的字串併接, 因此利用 str() 將整數轉為字串\nprint("總共有 " + str(len(all_stud)) + "名學員")\n# \n# 利用 document[] 取得 id 為 "brython_div1" 的位置, 然後與 brython_div1 變數對應\nbrython_div1 = document["brython_div1"]\n# 利用 Brython 的 "<=" 特殊符號, 將右值帶有字串與超文件內容物件插入 brython_div1 變數所指定的位置\n# 其中利用 html.A 建立 anchor 標註物件, 第一個變數為 anchor 字串, 第二個變數則為 hyper text reference\nbrython_div1 <= "1. " + html.A("2a-ag4", href="https://mdecd2025.github.io/2a-ag4/")+ html.A("(repo)", href="https://github.com/mdecd2025/2a-ag4")\n# 利用 html.BR() 插入 break 標註\nbrython_div1 <= html.BR()\nbrython_div1 <= "2. " + html.A("41223118", href="https://mdecd2025.github.io/hw-zhe41223118/")+ html.A("(repo)", href="https://github.com/mdecd2025/hw-zhe41223118")\nbrython_div1 <= html.BR()\nbrython_div1 <= "3. " + html.A("41223122", href="https://mdecd2025.github.io/hw-41223122/")+ html.A("(repo)", href="https://github.com/mdecd2025/hw-41223122")\nbrython_div1 <= html.BR()\nbrython_div1 <= "4. " + html.A("41223131", href="https://mdecd2025.github.io/hw-41223131/")+ html.A("(repo)", href="https://github.com/mdecd2025/hw-41223131")\nbrython_div1 <= html.BR()\nbrython_div1 <= "5. " + html.A("41223134", href="https://mdecd2025.github.io/hw-41223134/")+ html.A("(repo)", href="https://github.com/mdecd2025/hw-41223134")\nbrython_div1 <= html.BR()\nbrython_div1 <= "6. " + html.A("41223136", href="https://mdecd2025.github.io/hw-41223136/")+ html.A("(repo)", href="https://github.com/mdecd2025/hw-41223136")\nbrython_div1 <= html.BR()\nbrython_div1 <= "7. " + html.A("41223158", href="https://mdecd2025.github.io/hw-41223158/")+ html.A("(repo)", href="https://github.com/mdecd2025/hw-41223158")\n  \n \n \n \n \n  啟動 Brython  \n \n \n \n  導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n \n \n \n  add 1 to 100 開始  \n \n \n  add 1 to 100 結束 \n  editor1 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor1 結束   ##########################################  \n 從 1 累加到 100 part2: \n 1 add to 100 cango_three_gears BSnake AI Tetris \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n  add 1 to 100 part2 開始  \n \n \n  add 1 to 100 part2 結束 \n  editor2 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor2 結束  \n \n \n', 'tags': '', 'url': 'Brython.html'}]};