<h1>About</h1>
<p>課程名稱: 協同產品設計實習 - Collaborative Product Design Practice</p>
<p>2a第3組網站: <a href="https://mdecd2025.github.io/2a-ag3/" title="https://mdecd2025.github.io/2a-ag3/">https://mdecd2025.github.io/2a-ag3/</a></p>
<p>2a第3組倉儲: <a href="https://github.com/mdecd2025/2a-ag3" title="https://github.com/mdecd2025/2a-ag3">https://github.com/mdecd2025/2a-ag3</a></p>
<hr/>
<p>課程代號: cd2025</p>
<p>Teams 線上教學:</p>
<p style="padding-left: 30px;">以 "學號@nfu.edu.tw" 登入<span> </span><a href="https://login.microsoftonline.com/">https://login.microsoftonline.com/</a><span> </span>Office 365</p>
<p style="padding-left: 30px;">Teams 團隊代碼: <span>p5z4eku</span></p>
<hr/>
<p>課程評分:</p>
<p style="padding-left: 30px;">Homework (30%) - 每週至少提交兩次與課程進度有關的內容, 完成後填回自評表單</p>
<p style="padding-left: 30px;">Exam (40%) - 建立包含操作流程影片、心得以及提供檔案下載的網頁後填回自評表單</p>
<p style="padding-left: 30px;">Final Report (30%) - 利用網頁內容進行簡報並提交 pdf 格式書面報告, 完成後填回自評表單</p>
<h1>Links</h1>
<p>網站</p>
<p>41223138:<a href="https://mdecd2025.github.io/hw-41223138/content/index.html" title="41223138">https://mdecd2025.github.io/hw-41223138/content/index.html</a></p>
<p>41223140:<a href="https://mdecd2025.github.io/hw-41223140/content/index.html" title="https://mdecd2025.github.io/hw-41223140/content/index.html">https://mdecd2025.github.io/hw-41223140/content/index.html</a></p>
<p>41223143:<a href="https://mdecd2025.github.io/hw-41223143/content/index.html" title="https://mdecd2025.github.io/hw-41223143/content/index.html">https://mdecd2025.github.io/hw-41223143/content/index.html</a></p>
<p>41223144:<a href="https://mdecd2025.github.io/hw-41223144/content/index.html" title="https://mdecd2025.github.io/hw-41223144/content/index.html">https://mdecd2025.github.io/hw-41223144/content/index.html</a></p>
<p>倉儲</p>
<p>41223138:<a href="https://github.com/mdecd2025/hw-41223138" title="https://github.com/mdecd2025/hw-41223138">https://github.com/mdecd2025/hw-41223138</a></p>
<p>41223140:<a href="https://github.com/mdecd2025/hw-41223140" title="https://github.com/mdecd2025/hw-41223140">https://github.com/mdecd2025/hw-41223140</a></p>
<p>41223143:<a href="https://github.com/mdecd2025/hw-41223143" title="https://github.com/mdecd2025/hw-41223143">https://github.com/mdecd2025/hw-41223143</a></p>
<p>41223144:<a href="https://github.com/mdecd2025/hw-41223144" title="https://github.com/mdecd2025/hw-41223144">https://github.com/mdecd2025/hw-41223144</a></p>
<article class="group/turn w-full text-token-text-primary focus-visible:outline-2 focus-visible:outline-offset-[-4px]" data-scroll-anchor="true" data-testid="conversation-turn-14" dir="auto" tabindex="-1">
<div class="text-base my-auto mx-auto py-[18px] px-6">
<div class="mx-auto flex flex-1 text-base gap-4 md:gap-5 lg:gap-6 md:max-w-3xl">
<div class="group/conversation-turn relative flex w-full min-w-0 flex-col agent-turn @xs/thread:px-0 @sm/thread:px-1.5 @md/thread:px-4">
<div class="flex-col gap-1 md:gap-3">
<div class="flex max-w-full flex-col flex-grow">
<div class="min-h-8 text-message relative flex w-full flex-col items-end gap-2 whitespace-normal break-words text-start [.text-message+&amp;]:mt-5" data-message-author-role="assistant" data-message-id="25f4ed42-87d5-4f12-a410-64085797a4ed" data-message-model-slug="gpt-4o-mini" dir="auto">
<div class="flex w-full flex-col gap-1 empty:hidden first:pt-[3px]">
<div class="markdown prose w-full break-words dark:prose-invert light"></div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</article>
<p></p>
<h1>Week</h1>
<h3>w3</h3>
<p>各組員網站及倉儲程式碼</p>
<pre class="brush:cpp;auto-links:false;toolbar:false" contenteditable="false"># 從  Brython 程式庫中的 browser 導入 html, 可用來輸出超文件內容
# 而所導入的 document 可以指向網頁中的特定 id 內容
from browser import html, document
# 建立 url 變數與網站中 2a 學員的學號與帳號資料 URL 網誌字串對應
url = "https://mde.tw/list/2a.txt"
# 利用 open() 物件中的 readlines() 方法, 取出網站中的資料並逐行放入數列中, 因此 data 的資料型別為數列
data = open(url).readlines()
# 進行資料查驗時, 印出 data 數列內容
#print(data)
# 因為學員資料中的第一列為標題, 因此有效資料從索引值 1 開始
all_stud = data[1:]
# 利用 len() 函式查驗 all_stud 數列有幾筆資料, 因為要與前後的字串併接, 因此利用 str() 將整數轉為字串
print("總共有 " + str(len(all_stud)) + "名學員")
# 
# 利用 document[] 取得 id 為 "brython_div1" 的位置, 然後與 brython_div1 變數對應
brython_div1 = document["brython_div1"]
# 利用 Brython 的 "&lt;=" 特殊符號, 將右值帶有字串與超文件內容物件插入 brython_div1 變數所指定的位置
# 其中利用 html.A 建立 anchor 標註物件, 第一個變數為 anchor 字串, 第二個變數則為 hyper text reference
brython_div1 &lt;= "1. " + html.A("2a-ag3", href="https://mdecd2025.github.io/2a-ag3/")+ html.A("(repo)", href="https://github.com/mdecd2025/2a-ag3")
# 利用 html.BR() 插入 break 標註
brython_div1 &lt;= html.BR()
brython_div1 &lt;= "2. " + html.A("41223138", href="https://mdecd2025.github.io/hw-41223138/")+ html.A("(repo)", href="https://github.com/mdecd2025/hw-41223138")
brython_div1 &lt;= html.BR()
brython_div1 &lt;= "3. " + html.A("41223140", href="https://mdecd2025.github.io/hw-41223140/")+ html.A("(repo)", href="https://github.com/mdecd2025/hw-41223140")
brython_div1 &lt;= html.BR()
brython_div1 &lt;= "4. " + html.A("41223143", href="https://mdecd2025.github.io/hw-41223143/")+ html.A("(repo)", href="https://github.com/mdecd2025/hw-41223143")
brython_div1 &lt;= html.BR()
brython_div1 &lt;= "5. " + html.A("41223144", href="https://mdecd2025.github.io/hw-41223144/")+ html.A("(repo)", href="https://github.com/mdecd2025/hw-41223144")
</pre>
<p><span>1. </span><a href="https://mdecd2025.github.io/2a-ag3/">2a-ag3</a><a href="https://github.com/mdecd2025/2a-ag3">(repo)</a><br/><span>2. </span><a href="https://mdecd2025.github.io/hw-41223138/">41223138</a><a href="https://github.com/mdecd2025/hw-41223138">(repo)</a><br/><span>3. </span><a href="https://mdecd2025.github.io/hw-41223140/">41223140</a><a href="https://github.com/mdecd2025/hw-41223140">(repo)</a><br/><span>4. </span><a href="https://mdecd2025.github.io/hw-41223143/">41223143</a><a href="https://github.com/mdecd2025/hw-41223143">(repo)</a><br/><span>5. </span><a href="https://mdecd2025.github.io/hw-41223144/">41223144</a><a href="https://github.com/mdecd2025/hw-41223144">(repo)</a><br/><br/></p>
<h2>w5</h2>
<h3>Webots Tutorial</h3>
<h4>1.繁體中文詳細說明</h4>
<p>What is Webots?<br/>Webots 是一款專業的移動機器人模擬軟體。它提供了一個快速原型開發環境，使用者可以在其中創建具有物理屬性（例如質量、關節、摩擦係數等）的 3D 虛擬世界。使用者可以在這些虛擬世界中加入簡單的被動物體或稱為移動機器人的主動物體。這些移動機器人可以擁有不同的運動方式，例如輪式機器人、四足機器人或飛行機器人。此外，這些機器人還可以配備各種感測器和驅動裝置，例如距離感測器、驅動輪、攝像頭、馬達、觸摸感測器、發射器、接收器等。</p>
<p>在 Webots 中，使用者可以為每個機器人編寫程式，讓它們展現所需的行為。Webots 還提供了大量的機器人模型和控制程式範例，幫助使用者更容易入門和開始使用。</p>
<p>此外，Webots 還具有與真實移動機器人連接的介面功能。一旦您在模擬環境中使機器人的行為達到預期，就可以將其控制程式轉移到真實的機器人上，例如 e-puck、DARwIn-OP、Nao 等。Webots 系統還支持通過相關介面添加新的實體機器人接口。</p>
<p>總結來說，Webots 是一個強大且靈活的模擬工具，適用於機器人研究、開發和教育領域，能夠幫助使用者設計和測試各種機器人系統，並將其應用於真實世界中的實際機器人。</p>
<p>What can I do with Webots?<br/>Webots 非常適合用於與移動機器人相關的研究和教育項目，許多移動機器人項目多年來一直依賴 Webots，並且應用於以下領域：</p>
<p>移動機器人原型開發：包括學術研究、汽車產業、航空產業、吸塵器產業、玩具產業、以及愛好者等，Webots 提供了一個方便的環境來進行機器人原型設計和測試。</p>
<p>機器人運動研究：適用於不同類型的機器人運動研究，如四足機器人、仿人機器人、腿式機器人等，幫助開發更靈活或更高效的移動方式。</p>
<p>多機器人協作研究：Webots 可用於群體智能、協作機器人群組等多代理研究，探索多機器人之間的協同工作和智能行為。</p>
<p>自適應行為研究：支持遺傳算法、神經網絡、人工智慧等技術，讓使用者能研究如何讓機器人根據環境或情況自我調整行為。</p>
<p>機器人教育：Webots 也廣泛應用於教學領域，支援機器人學、程式設計（C/C++/Java/Python）等課程，幫助學生實踐和學習機器人技術。</p>
<p>機器人競賽：Webots 可用於準備和參加各類機器人競賽，例如 Robotstadium 或 Rat's Life 等競賽，讓參賽者進行機器人設計與測試。</p>
<p>What do I need to know to use Webots?<br/>要編寫自己的機器人控制器，需要具備 C、C++、Java、Python 或 MATLAB 程式語言的基本知識。但是，即使您不懂這些語言，您仍然可以使用名為 BotStudio 的簡單圖形程式語言對 e-puck 和 Hemisson 機器人進行程式設計。如果您不想使用 Webots 中提供的現有機器人模型，而想要創建自己的機器人模型，或在模擬環境中添加特殊對象，您將需要具備 3D 電腦圖形學和 VRML97 描述語言的基本知識。這將允許您在 Webots 中建立 3D 模型或從 3D 建模軟體中匯入它們。</p>
<p><br/>How do I get User Support?<br/>Cyberbotics透過其 Premier Service 計劃和客製化開發服務提供付費用戶支援。各個地方也提供社區支持，但是，不能保證您一定能得到問題的答案：帶有標籤的Robotics StackExchangewebots可能是詢問有關 Webots 的技術問題的最佳場所。GitHub Discussions可用於詢問與 Webots 及其文件的開發相關的問題。GitHub Issues僅用於報告在 Webots 中發現的錯誤。Discord可用於與 Webots 社群快速提問和自發性討論。</p>
<p>Webots Simulation<br/>一個 Webots 世界檔案（.wbt），定義了其中一個或多個機器人及其環境。該 .wbt 檔案有時會依賴外部的 PROTO 檔案（.proto）和材質貼圖。<br/>一個或多個控制程式，用於控制上述機器人（可使用 C/C++/Java/Python/MATLAB 等語言編寫）。<br/>一個可選的物理插件，用於修改 Webots 預設的物理行為（使用 C/C++ 編寫）。</p>
<p>What is a World?<br/>在 Webots 中，世界是對機器人及其環境屬性的 3D 描述。它包含每個物體的描述：位置、方向、幾何形狀、外觀（如顏色或亮度）、物理屬性、物體類型等。世界是以層次結構組織的，物體可以包含其他物體（類似於 VRML97）。例如，一個機器人可以包含兩個輪子、一個距離感測器和一個關節，而該關節本身又可以包含一個攝像頭等。世界檔案不包含機器人的控制程式碼；它只指定每個機器人所需的控制器名稱。世界檔案會儲存在 ".wbt" 檔案中，這些 ".wbt" 檔案會存儲在每個 Webots 專案的 "worlds" 子目錄中。</p>
<p>What is a Controller?<br/>控制器是用來控制在世界檔案中指定的機器人的電腦程式。控制器可以使用 Webots 支援的任何程式語言編寫：C、C++、Java、Python 或 MATLAB。當模擬開始時，Webots 會啟動指定的控制器，每個控制器作為一個獨立的進程運行，並將這些控制器進程與模擬中的機器人相關聯。需要注意的是，雖然多個機器人可以使用相同的控制程式碼，但每個機器人會啟動一個獨立的進程。一些程式語言需要編譯（如 C 和 C++），其他語言則需要解釋執行（如 Python 和 MATLAB），還有一些語言需要既編譯又解釋執行（如 Java）。例如，C 和 C++ 控制器會編譯成平台依賴的二進位執行檔（例如 Windows 下的 ".exe" 檔案）。Python 和 MATLAB 控制器由相應的執行時系統解釋執行（這些系統必須已安裝）。Java 控制器需要先編譯成位元碼（".class" 檔案或 ".jar" 檔案），然後由 Java 虛擬機解釋執行。每個控制器的原始檔案和二進位檔案會一起儲存在控制器目錄中。控制器目錄位於每個 Webots 專案的 "controllers" 子目錄中。</p>
<p>What is a Supervisor Controller?<br/>Supervisor 控制器是設置為 TRUE 的機器人監控欄位的控制器，它可以執行通常只有人類操作員才能進行的操作，而非真實機器人能執行的操作。Supervisor 控制器可以使用上述任何程式語言編寫。然而，與一般的機器人控制器不同，Supervisor 控制器擁有對特權操作的存取權。這些特權操作包括模擬控制，例如將機器人移動到隨機位置、進行模擬的視頻捕捉等。</p>
<p><strong>2.<span>整理</span><span>重要的英文單字與用法, 並且針對其中所使用的英文文法逐句說明.</span></strong></p>
<p class="" data-end="131" data-start="106"><strong data-end="130" data-start="106">Present Simple Tense</strong>:</p>
<p>"Webots is a professional mobile robot simulation software package."</p>
<p>"It offers a rapid prototyping environment."</p>
<p>"The user can add simple passive objects."</p>
<p>"These robots can have different locomotion schemes."</p>
<p><strong><span></span></strong></p>
<p><strong><strong data-end="631" data-start="611"><strong data-end="382" data-start="367">Modal Verbs</strong>:</strong></strong></p>
<p>"can" (e.g., "The user can program each robot individually.")</p>
<p>"may" (e.g., "They may be equipped with a number of sensor and actuator devices.")</p>
<p>"will" (e.g., "Webots will launch the specified controllers.")</p>
<p><strong><strong data-end="631" data-start="611">Relative Clauses</strong>:</strong></p>
<p>Webots is a professional mobile robot simulation software package that offers a rapid prototyping environment."</p>
<p>"A world, in Webots, is a 3D description of the properties of robots and of their environment."</p>
<p><strong data-end="881" data-start="864">Passive Voice</strong>:</p>
<p>The user is given a chance to add simple passive objects."</p>
<p>"The world file is saved in ".wbt" files."</p>
<p><strong data-end="1026" data-start="1004">Infinitive Phrases</strong>:</p>
<p>to create 3D virtual worlds with physics properties."</p>
<p>"to exhibit the desired behavior."</p>
<p>"to modify Webots regular physics behavior."</p>
<p><strong data-end="1198" data-start="1182">Noun Phrases</strong>:</p>
<p>Webots world file (.wbt) that defines one or several robots."</p>
<p>"A basic knowledge of the C, C++, Java, Python, or MATLAB programming language is necessary</p>
<p><strong data-end="1396" data-start="1371">Conditional Sentences</strong>:</p>
<p>"If you don't want to use existing robot models... you will need a basic knowledge of 3D computer graphics."."</p>
<p><strong data-end="1545" data-start="1519">Adjectives and Adverbs</strong>:</p>
<p>Rapid prototyping environment."</p>
<p>"Simple graphical programming language."</p>
<p>"Quick questions and spontaneous discussions."</p>
<p><strong data-end="1715" data-start="1690">Prepositional Phrases</strong>:</p>
<p>"In the toy industry."</p>
<p>"In C/C++/Java/Python programming lectures."</p>
<p>"In Webots."</p>
<p><strong data-end="1829" data-start="1818">Gerunds</strong>:</p>
<p>"Adding new interfaces is possible."</p>
<p>"Teaching robotics."</p>
<p></p>
<p></p>
<p><strong>3.webots摘要</strong></p>
<p data-end="592" data-start="40"><strong data-end="59" data-start="40">What is Webots?</strong></p>
<p data-end="592" data-start="40">Webots is a professional mobile robot simulation software that allows users to create 3D virtual worlds with physics properties like mass, friction, and joints. Users can add robots with various locomotion types (wheeled, legged, flying) and equip them with sensors and actuators (e.g., cameras, motors). It also supports programming robots for specific behaviors, with many models and examples to assist users. Webots can interface with real robots, allowing control programs to be transferred from simulation to real-world robots.</p>
<p data-end="712" data-start="594"><strong data-end="624" data-start="594">What can I do with Webots?</strong></p>
<p data-end="712" data-start="594">Webots is suitable for research and educational projects in mobile robotics, including:</p>
<ul data-end="914" data-start="713">
<li data-end="739" data-start="713">Mobile robot prototyping</li>
<li data-end="795" data-start="740">Locomotion research (e.g., legged or humanoid robots)</li>
<li data-end="841" data-start="796">Multi-agent and swarm intelligence research</li>
<li data-end="877" data-start="842">Adaptive behavior and AI research</li>
<li data-end="897" data-start="878">Teaching robotics</li>
<li data-end="914" data-start="898">Robot contests</li>
</ul>
<p data-end="1197" data-start="916"><strong data-end="957" data-start="916">What do I need to know to use Webots?</strong></p>
<p data-end="1197" data-start="916">To develop simulations in Webots, users need basic knowledge of C, C++, Java, Python, or MATLAB for programming robot controllers. Additionally, knowledge of 3D graphics and VRML97 may be needed for creating custom robot models or objects.</p>
<p data-end="1415" data-start="1199"><strong data-end="1229" data-start="1199">How do I get User Support?</strong></p>
<p data-end="1415" data-start="1199">Cyberbotics offers paid support through Premier Service plans, while community-based support is available through platforms like Robotics StackExchange, GitHub Discussions, and Discord.</p>
<p data-end="1450" data-start="1417"><strong data-end="1450" data-start="1417">Webots Simulation Components:</strong></p>
<ul data-end="1670" data-start="1451">
<li data-end="1513" data-start="1451"><strong data-end="1475" data-start="1453">World File (.wbt):</strong><span> </span>Defines robots and their environment.</li>
<li data-end="1602" data-start="1514"><strong data-end="1540" data-start="1516">Controller Programs:</strong><span> </span>Written in supported languages (C/C++, Java, Python, MATLAB).</li>
<li data-end="1670" data-start="1603"><strong data-end="1635" data-start="1605">Physics Plugin (optional):</strong><span> </span>Modifies regular physics behavior.</li>
</ul>
<p data-end="1943" data-start="1672"><strong data-end="1692" data-start="1672">What is a World?</strong></p>
<p data-end="1943" data-start="1672">A world in Webots is a 3D description of robots and their environment, including properties like position, appearance, and physical attributes. World files do not contain controller code but specify the name of the required controller for each robot.</p>
<p data-end="2297" data-start="1945"><strong data-end="1970" data-start="1945">What is a Controller?</strong></p>
<p data-end="2297" data-start="1945">A controller is a program that controls a robot in the world file. It can be written in C, C++, Java, Python, or MATLAB. When the simulation starts, Webots launches each controller as a separate process associated with the respective robots. The source and binary files are stored in a controller directory within the project.</p>
<p data-end="2592" data-is-last-node="" data-is-only-node="" data-start="2299"><strong data-end="2335" data-start="2299">What is a Supervisor Controller?</strong></p>
<p data-end="2592" data-is-last-node="" data-is-only-node="" data-start="2299">A Supervisor controller is a special type of controller with enhanced capabilities. It controls robots with a supervisor field set to TRUE, allowing privileged operations such as moving robots to random positions or making video captures of the simulation.</p>
<p data-end="2592" data-is-last-node="" data-is-only-node="" data-start="2299"><strong>4.wbots重要單字及用法</strong></p>
<ol data-end="4009" data-start="39">
<li data-end="186" data-start="39">
<p data-end="60" data-start="42"><strong data-end="60" data-start="42">Simulation（仿真）</strong></p>
<ul data-end="186" data-start="64">
<li data-end="88" data-start="64"><strong data-end="72" data-start="66">解釋</strong>：模擬真實世界過程或系統的操作。</li>
<li data-end="186" data-start="92"><strong data-end="100" data-start="94">用法</strong>："Webots is a professional mobile robot simulation software."（Webots 是一款專業的移動機器人仿真軟體。）</li>
</ul>
</li>
<li data-end="424" data-start="188">
<p data-end="208" data-start="191"><strong data-end="208" data-start="191">Prototype（原型）</strong></p>
<ul data-end="424" data-start="212">
<li data-end="242" data-start="212"><strong data-end="220" data-start="214">解釋</strong>：從中開發出其他形式的產品的初始模型或版本。</li>
<li data-end="424" data-start="246"><strong data-end="254" data-start="248">用法</strong>："Webots is well suited for research and educational projects related to mobile robotics, including mobile robot prototyping."（Webots 非常適合用於與移動機器人相關的研究和教育項目，包括移動機器人原型製作。）</li>
</ul>
</li>
<li data-end="634" data-start="426">
<p data-end="447" data-start="429"><strong data-end="447" data-start="429">Locomotion（運動）</strong></p>
<ul data-end="634" data-start="451">
<li data-end="480" data-start="451"><strong data-end="459" data-start="453">解釋</strong>：從一個地方到另一個地方移動的能力或行為。</li>
<li data-end="634" data-start="484"><strong data-end="492" data-start="486">用法</strong>："These robots can have different locomotion schemes (wheeled robots, legged robots, or flying robots)."（這些機器人可以有不同的運動方式（如輪式機器人、腿式機器人或飛行機器人）。）</li>
</ul>
</li>
<li data-end="920" data-start="636">
<p data-end="656" data-start="639"><strong data-end="656" data-start="639">Actuator（執行器）</strong></p>
<ul data-end="920" data-start="660">
<li data-end="687" data-start="660"><strong data-end="668" data-start="662">解釋</strong>：負責移動或控制機械裝置或系統的設備。</li>
<li data-end="920" data-start="691"><strong data-end="699" data-start="693">用法</strong>："They may be equipped with a number of sensor and actuator devices, such as distance sensors, drive wheels, cameras, motors, touch sensors, emitters, receivers, etc."（它們可能配備多種傳感器和執行器設備，如距離傳感器、驅動輪、攝像頭、電動機、觸摸傳感器、發射器、接收器等。）</li>
</ul>
</li>
<li data-end="1085" data-start="922">
<p data-end="942" data-start="925"><strong data-end="942" data-start="925">Interface（介面）</strong></p>
<ul data-end="1085" data-start="946">
<li data-end="972" data-start="946"><strong data-end="954" data-start="948">解釋</strong>：兩個系統、學科或組織相互作用的點。</li>
<li data-end="1085" data-start="976"><strong data-end="984" data-start="978">用法</strong>："Webots also contains a number of interfaces to real mobile robots..."（Webots 還包含多個與真實移動機器人接口的功能...）</li>
</ul>
</li>
<li data-end="1269" data-start="1087">
<p data-end="1106" data-start="1090"><strong data-end="1106" data-start="1090">Behavior（行為）</strong></p>
<ul data-end="1269" data-start="1110">
<li data-end="1139" data-start="1110"><strong data-end="1118" data-start="1112">解釋</strong>：機器人或系統響應命令或與環境互動的方式。</li>
<li data-end="1269" data-start="1143"><strong data-end="1151" data-start="1145">用法</strong>："Finally, the user can program each robot individually to exhibit the desired behavior."（最後，用戶可以為每個機器人單獨編程，表現出所需的行為。）</li>
</ul>
</li>
<li data-end="1566" data-start="1271">
<p data-end="1289" data-start="1274"><strong data-end="1289" data-start="1274">Physics（物理）</strong></p>
<ul data-end="1566" data-start="1293">
<li data-end="1324" data-start="1293"><strong data-end="1301" data-start="1295">解釋</strong>：研究物質和能量的本質及其相互關係的科學領域。</li>
<li data-end="1566" data-start="1328"><strong data-end="1336" data-start="1330">用法</strong>："Webots offers a rapid prototyping environment, that allows the user to create 3D virtual worlds with physics properties such as mass, joints, friction coefficients, etc."（Webots 提供一個快速原型製作環境，允許用戶創建具有物理屬性（如質量、關節、摩擦係數等）的 3D 虛擬世界。）</li>
</ul>
</li>
<li data-end="1773" data-start="1568">
<p data-end="1584" data-start="1571"><strong data-end="1584" data-start="1571">Model（模型）</strong></p>
<ul data-end="1773" data-start="1588">
<li data-end="1618" data-start="1588"><strong data-end="1596" data-start="1590">解釋</strong>：用於理解或模擬現實世界對等物的系統或物體。</li>
<li data-end="1773" data-start="1622"><strong data-end="1630" data-start="1624">用法</strong>："Webots contains a large number of robot models and controller program examples to help users get started."（Webots 包含大量的機器人模型和控制程式範例，以幫助用戶入門。）</li>
</ul>
</li>
<li data-end="1950" data-start="1775">
<p data-end="1797" data-start="1778"><strong data-end="1797" data-start="1778">Controller（控制器）</strong></p>
<ul data-end="1950" data-start="1801">
<li data-end="1826" data-start="1801"><strong data-end="1809" data-start="1803">解釋</strong>：在仿真中控制機器人或系統的程式。</li>
<li data-end="1950" data-start="1830"><strong data-end="1838" data-start="1832">用法</strong>："A controller is a computer program that controls a robot specified in a world file."（控制器是控制在世界檔案中指定的機器人的電腦程式。）</li>
</ul>
</li>
<li data-end="2157" data-start="1952">
<p data-end="1974" data-start="1956"><strong data-end="1974" data-start="1956">Supervisor（主管）</strong></p>
<ul data-end="2157" data-start="1979">
<li data-end="2011" data-start="1979"><strong data-end="1987" data-start="1981">解釋</strong>：一種特殊的控制器，具有比普通控制器更多的權限。</li>
<li data-end="2157" data-start="2016"><strong data-end="2024" data-start="2018">用法</strong>："The Supervisor controller is the controller of a Robot whose supervisor field is set to TRUE..."（主管控制器是控制一個設置了主管欄位為 TRUE 的機器人的控制器。）</li>
</ul>
</li>
<li data-end="2311" data-start="2159">
<p data-end="2180" data-start="2163"><strong data-end="2180" data-start="2163">Privilege（特權）</strong></p>
<ul data-end="2311" data-start="2185">
<li data-end="2210" data-start="2185"><strong data-end="2193" data-start="2187">解釋</strong>：賦予用戶或系統的特殊權限或優勢。</li>
<li data-end="2311" data-start="2215"><strong data-end="2223" data-start="2217">用法</strong>："The Supervisor controller will have access to privileged operations."（主管控制器將可以訪問特權操作。）</li>
</ul>
</li>
<li data-end="2493" data-start="2313">
<p data-end="2331" data-start="2317"><strong data-end="2331" data-start="2317">Plugin（插件）</strong></p>
<ul data-end="2493" data-start="2336">
<li data-end="2359" data-start="2336"><strong data-end="2344" data-start="2338">解釋</strong>：一種可以增加功能的軟體元件。</li>
<li data-end="2493" data-start="2364"><strong data-end="2372" data-start="2366">用法</strong>："An optional physics plugin that can be used to modify Webots regular physics behavior."（一個可選的物理插件，用來修改 Webots 常規的物理行為。）</li>
</ul>
</li>
<li data-end="2684" data-start="2495">
<p data-end="2516" data-start="2499"><strong data-end="2516" data-start="2499">Hierarchy（層級）</strong></p>
<ul data-end="2684" data-start="2521">
<li data-end="2550" data-start="2521"><strong data-end="2529" data-start="2523">解釋</strong>：專案或物件按等級或層次排列的系統或結構。</li>
<li data-end="2684" data-start="2555"><strong data-end="2563" data-start="2557">用法</strong>："Worlds are organized as hierarchical structures where objects can contain other objects..."（世界被組織為層級結構，其中物件可以包含其他物件...）</li>
</ul>
</li>
<li data-end="2901" data-start="2686">
<p data-end="2723" data-start="2690"><strong data-end="2723" data-start="2690">Prototype File (.proto)（原型檔案）</strong></p>
<ul data-end="2901" data-start="2728">
<li data-end="2766" data-start="2728"><strong data-end="2736" data-start="2730">解釋</strong>：Webots 中用於定義可重用物件模型及其屬性的檔案格式。</li>
<li data-end="2901" data-start="2771"><strong data-end="2779" data-start="2773">用法</strong>："The .wbt file does sometimes depend on external PROTO files (.proto) and textures."（.wbt 檔案有時依賴外部的 PROTO 檔案（.proto）和紋理。）</li>
</ul>
</li>
<li data-end="3093" data-start="2903">
<p data-end="2926" data-start="2907"><strong data-end="2926" data-start="2907">Environment（環境）</strong></p>
<ul data-end="3093" data-start="2931">
<li data-end="2954" data-start="2931"><strong data-end="2939" data-start="2933">解釋</strong>：機器人操作的周圍條件或背景。</li>
<li data-end="3093" data-start="2959"><strong data-end="2967" data-start="2961">用法</strong>："A world in Webots is a 3D description of the properties of robots and of their environment."（Webots 中的世界是對機器人及其環境屬性的 3D 描述。）</li>
</ul>
</li>
<li data-end="3379" data-start="3095">
<p data-end="3129" data-start="3099"><strong data-end="3129" data-start="3099">Privilege Operations（特權操作）</strong></p>
<ul data-end="3379" data-start="3134">
<li data-end="3173" data-start="3134"><strong data-end="3142" data-start="3136">解釋</strong>：通常只能由人類操作員執行的操作，主管控制器可以執行這些操作。</li>
<li data-end="3379" data-start="3178"><strong data-end="3186" data-start="3180">用法</strong>："The privileged operations include simulation control, for example, moving the robots to a random position, making a video capture of the simulation, etc."（特權操作包括仿真控制，例如將機器人移動到隨機位置，進行仿真視頻捕捉等。）</li>
</ul>
</li>
<li data-end="3587" data-start="3381">
<p data-end="3400" data-start="3385"><strong data-end="3400" data-start="3385">Custom（定制的）</strong></p>
<ul data-end="3587" data-start="3405">
<li data-end="3427" data-start="3405"><strong data-end="3413" data-start="3407">解釋</strong>：根據特定要求或偏好製作的。</li>
<li data-end="3587" data-start="3432"><strong data-end="3440" data-start="3434">用法</strong>："Cyberbotics provides paid user support through its Premier Service plans and Custom Development services."（Cyberbotics 透過其高級服務計畫和定制開發服務提供付費用戶支持。）</li>
</ul>
</li>
<li data-end="3828" data-start="3589">
<p data-end="3619" data-start="3593"><strong data-end="3619" data-start="3593">Community-Based（社群支持的）</strong></p>
<ul data-end="3828" data-start="3624">
<li data-end="3653" data-start="3624"><strong data-end="3632" data-start="3626">解釋</strong>：基於用戶社群的支持或互動，而非商業服務。</li>
<li data-end="3828" data-start="3658"><strong data-end="3666" data-start="3660">用法</strong>："Community-based support is also available in various places, however, there is no guarantee you will get an answer to your question."（社群支持也在多個地方提供，但不能保證你能得到答案。）</li>
</ul>
</li>
<li data-end="4009" data-start="3830">
<p data-end="3849" data-start="3834"><strong data-end="3849" data-start="3834">Texture（紋理）</strong></p>
<ul data-end="4009" data-start="3854">
<li data-end="3874" data-start="3854"><strong data-end="3862" data-start="3856">解釋</strong>：物體表面的質量或外觀。</li>
<li data-end="4009" data-start="3879"><strong data-end="3887" data-start="3881">用法</strong>："The .wbt file does sometimes depend on external PROTO files (.proto) and textures."（.wbt 檔案有時依賴外部的 PROTO 檔案（.proto）和紋理。）</li>
</ul>
</li>
</ol>
<p data-end="4041" data-is-last-node="" data-is-only-node="" data-start="4011">這些單字對於理解 Webots 及其組件、仿真過程非常重要</p>
<p data-end="4041" data-is-last-node="" data-is-only-node="" data-start="4011"><span><span>         <strong> 5.請詳細說明如何採手動方式在 Webots 建立下列場景:</strong></span></span></p>
<p data-end="4041" data-is-last-node="" data-is-only-node="" data-start="4011"><strong>        </strong><strong>  6.希望可以手把手一步步說明該如何利用圖形介面 menu 建立這個場景, 過程中有那些要點必須特別注意?</strong></p>
<p data-end="4041" data-is-last-node="" data-is-only-node="" data-start="4011">       </p>
<p style="text-align: left;">步驟一：創建一個新的 Webots 專案<br/>啟動 Webots：打開 Webots 軟體。</p>
<p style="text-align: left;">創建新專案：</p>
<p style="text-align: left;">點擊 File (檔案) 菜單，選擇 New Project Directory (新建專案目錄)。</p>
<p style="text-align: left;">輸入專案名稱並選擇儲存位置。</p>
<p style="text-align: left;">確保勾選 "Create a new world" (創建新世界) 選項，這樣 Webots 會自動為您創建一個新的 .wbt 世界文件。</p>
<p style="text-align: left;">步驟二：設置地面 (Ground)<br/>打開場景編輯器：在左側的「場景樹」中，您將看到一個名為 default 的世界。點擊這個世界，然後選擇 Add (添加)。</p>
<p style="text-align: left;">添加地面：</p>
<p style="text-align: left;">在彈出的窗口中選擇 Solid，這樣可以添加一個固體物體。</p>
<p style="text-align: left;">在「位置」(Translation) 欄位中，將 Z 軸設置為 -0.1，這樣地面會稍微下降，避免與其他物體重疊。</p>
<p style="text-align: left;">在 Appearance 欄位中，選擇顏色或貼圖來設置地面的外觀。通常我們可以選擇顏色，例如 Gray (灰色)，這樣看起來像是地面。</p>
<p style="text-align: left;">步驟三：添加障礙物<br/>添加一個障礙物：</p>
<p style="text-align: left;">點擊 Add (添加) 按鈕，再選擇 Solid 來添加一個固體物體作為障礙物。</p>
<p style="text-align: left;">將物體的 Translation 欄位設置為 (0, 0, 0.1)，讓它位於地面上方。</p>
<p style="text-align: left;">您可以改變它的 Size (大小) 欄位，例如設置為 (0.5, 0.5, 0.5)，這樣它會成為一個 0.5 米見方的立方體障礙物。</p>
<p style="text-align: left;">變更其外觀，在 Appearance 欄位選擇 Color 或 Texture 來設置障礙物的顏色或貼圖。</p>
<p style="text-align: left;">步驟四：添加機器人<br/>選擇機器人模型：</p>
<p style="text-align: left;">點擊 Add (添加)，在彈出的選擇框中選擇 Robot 類型，您可以選擇 Webots 提供的預設機器人模型，比如 e-puck 或 Simple Robot。</p>
<p style="text-align: left;">點擊 Add，這樣機器人就會被加入到場景中。</p>
<p style="text-align: left;">設定機器人的位置：</p>
<p style="text-align: left;">點擊場景樹中的機器人，進入其 Translation (位置) 欄位。</p>
<p style="text-align: left;">將其位置設置為 (0, 0, 0.3)，這樣它會位於地面之上，且不會與障礙物重疊。</p>
<p style="text-align: left;">步驟五：設置機器人控制器<br/>設置機器人的控制程式：</p>
<p style="text-align: left;">在機器人物件的 Controller 欄位，選擇一個預設的控制程式，或者點擊 New 來創建一個新的控制程式。</p>
<p style="text-align: left;">若選擇新建控制程式，Webots 會要求您指定程式語言（C、C++、Python 等），並自動在專案中創建一個新的控制器文件。</p>
<p style="text-align: left;">您可以選擇使用預設控制器，或編寫您自己的程式來控制機器人的行為，例如使用 Python 控制機器人的簡單前進。</p>
<p style="text-align: left;">步驟六：保存和運行場景<br/>保存世界文件：確保所有的修改都已經保存，點擊 File (檔案)，選擇 Save World 來保存當前世界文件。</p>
<p style="text-align: left;">運行場景：</p>
<p style="text-align: left;">點擊上方的綠色播放按鈕，Webots 會啟動模擬，並執行您設置的機器人控制程式。</p>
<p style="text-align: left;">您可以觀察機器人如何在世界中移動，並與障礙物進行互動。</p>
<p style="text-align: left;">特別注意的要點：<br/>位置設置：當設置機器人和障礙物的位置時，確保它們不會重疊在一起，這樣避免模型無法正常運行。特別注意 Translation 的 Z 軸值，它控制物體的垂直位置。</p>
<p style="text-align: left;">控制程式設定：每個機器人都需要指定一個控制程式。您可以使用預設的控制程式來測試機器人的基本行為，但若需要自定義行為，必須撰寫相應的控制程式。</p>
<p style="text-align: left;">物理屬性：設置物體的物理屬性（如質量、摩擦係數）時，請注意這會影響模擬的結果。例如，障礙物應該設置為具有較高的摩擦係數，而地面則可以選擇較低的摩擦，以模擬正常的行走環境。</p>
<p style="text-align: left;">機器人模型選擇：Webots 提供多種機器人模型，您可以根據需要選擇適合的機器人。在選擇機器人時，請確保其有正確的控制程式並與您的場景相匹配。</p>
<ol data-end="932" data-start="671">
<li class="" data-end="932" data-start="671">
<p class="" data-end="686" data-start="674"><strong data-end="685" data-start="674">添加一個障礙物</strong>：</p>
<ul data-end="932" data-start="690">
<li class="" data-end="736" data-start="690">
<p class="" data-end="736" data-start="692">點擊 <code data-end="700" data-start="695">Add</code> (添加) 按鈕，再選擇 <code data-end="720" data-start="713">Solid</code> 來添加一個固體物體作為障礙物。</p>
</li>
<li class="" data-end="790" data-start="740">
<p class="" data-end="790" data-start="742">將物體的 <code data-end="760" data-start="747">Translation</code> 欄位設置為 <code data-end="780" data-start="767">(0, 0, 0.1)</code>，讓它位於地面上方。</p>
</li>
<li class="" data-end="867" data-start="794">
<p class="" data-end="867" data-start="796">您可以改變它的 <code data-end="810" data-start="804">Size</code> (大小) 欄位，例如設置為 <code data-end="842" data-start="825">(0.5, 0.5, 0.5)</code>，這樣它會成為一個 0.5 米見方的立方體障礙物。</p>
</li>
<li class="" data-end="932" data-start="871">
<p class="" data-end="932" data-start="873">變更其外觀，在 <code data-end="893" data-start="881">Appearance</code> 欄位選擇 <code data-end="906" data-start="899">Color</code> 或 <code data-end="918" data-start="909">Texture</code> 來設置障礙物的顏色或貼圖。</p>
<p class="" data-end="932" data-start="873"></p>
<strong>步驟四：添加機器人</strong></li>
</ul>
</li>
</ol>
<ol data-end="1202" data-start="952">
<li class="" data-end="1092" data-start="952">
<p class="" data-end="967" data-start="955"><strong data-end="966" data-start="955">選擇機器人模型</strong>：</p>
<ul data-end="1092" data-start="971">
<li class="" data-end="1062" data-start="971">
<p class="" data-end="1062" data-start="973">點擊 <code data-end="981" data-start="976">Add</code> (添加)，在彈出的選擇框中選擇 <code data-end="1005" data-start="998">Robot</code> 類型，您可以選擇 Webots 提供的預設機器人模型，比如 <code data-end="1044" data-start="1036">e-puck</code> 或 <code data-end="1061" data-start="1047">Simple Robot</code>。</p>
</li>
<li class="" data-end="1092" data-start="1066">
<p class="" data-end="1092" data-start="1068">點擊 <code data-end="1076" data-start="1071">Add</code>，這樣機器人就會被加入到場景中。</p>
</li>
</ul>
</li>
<li class="" data-end="1202" data-start="1094">
<p class="" data-end="1110" data-start="1097"><strong data-end="1109" data-start="1097">設定機器人的位置</strong>：</p>
<p class="" data-end="1153" data-start="1116">點擊場景樹中的機器人，進入其 <code data-end="1144" data-start="1131">Translation</code> (位置) 欄位。</p>
<p class="" data-end="1153" data-start="1116">將其位置設置為 <code data-end="1180" data-start="1167">(0, 0, 0.3)</code>，這樣它會位於地面之上，且不會與障礙物重疊。</p>
</li>
</ol>
<blockquote>
<h5 data-end="1224" data-start="1204">步驟五：設置機器人控制器</h5>
<p><strong>步驟五：設置機器人控制器</strong></p>
</blockquote>
<ol data-end="1438" data-start="1225">
<li class="" data-end="1438" data-start="1225">
<p class="" data-end="1243" data-start="1228"><strong data-end="1242" data-start="1228">設置機器人的控制程式</strong>：</p>
<ul data-end="1438" data-start="1247">
<li class="" data-end="1308" data-start="1247">
<p class="" data-end="1308" data-start="1249">在機器人物件的 <code data-end="1269" data-start="1257">Controller</code> 欄位，選擇一個預設的控制程式，或者點擊 <code data-end="1295" data-start="1290">New</code> 來創建一個新的控制程式。</p>
</li>
<li class="" data-end="1377" data-start="1312">
<p class="" data-end="1377" data-start="1314">若選擇新建控制程式，Webots 會要求您指定程式語言（C、C++、Python 等），並自動在專案中創建一個新的控制器文件。</p>
</li>
<li class="" data-end="1438" data-start="1381">
<p class="" data-end="1438" data-start="1383">您可以選擇使用預設控制器，或編寫您自己的程式來控制機器人的行為，例如使用 Python 控制機器人的簡單前進。</p>
<strong>步驟六：保存和運行場景</strong></li>
</ul>
</li>
</ol>
<ol data-end="1620" data-start="1460">
<li class="" data-end="1528" data-start="1460">
<p class="" data-end="1528" data-start="1463"><strong data-end="1473" data-start="1463">保存世界文件</strong>：確保所有的修改都已經保存，點擊 <code data-end="1496" data-start="1490">File</code> (檔案)，選擇 <code data-end="1517" data-start="1505">Save World</code> 來保存當前世界文件。</p>
</li>
<li class="" data-end="1620" data-start="1529">
<p class="" data-end="1541" data-start="1532"><strong data-end="1540" data-start="1532">運行場景</strong>：</p>
<p class="" data-end="1587" data-start="1547">點擊上方的綠色播放按鈕，Webots 會啟動模擬，並執行您設置的機器人控制程式。</p>
<p class="" data-end="1620" data-start="1593">您可以觀察機器人如何在世界中移動，並與障礙物進行互動。</p>
<strong>特別注意的要點:</strong></li>
</ol>
<ol data-end="1984" data-start="1639">
<li class="" data-end="1728" data-start="1639">
<p class="" data-end="1728" data-start="1642"><strong data-end="1650" data-start="1642">位置設置</strong>：當設置機器人和障礙物的位置時，確保它們不會重疊在一起，這樣避免模型無法正常運行。特別注意 <code data-end="1709" data-start="1696">Translation</code> 的 Z 軸值，它控制物體的垂直位置。</p>
</li>
<li class="" data-end="1810" data-start="1733">
<p class="" data-end="1810" data-start="1736"><strong data-end="1746" data-start="1736">控制程式設定</strong>：每個機器人都需要指定一個控制程式。您可以使用預設的控制程式來測試機器人的基本行為，但若需要自定義行為，必須撰寫相應的控制程式。</p>
</li>
<li class="" data-end="1904" data-start="1812">
<p class="" data-end="1904" data-start="1815"><strong data-end="1823" data-start="1815">物理屬性</strong>：設置物體的物理屬性（如質量、摩擦係數）時，請注意這會影響模擬的結果。例如，障礙物應該設置為具有較高的摩擦係數，而地面則可以選擇較低的摩擦，以模擬正常的行走環境。</p>
</li>
<li class="" data-end="1984" data-start="1906">
<p class="" data-end="1984" data-start="1909"><strong data-end="1920" data-start="1909">機器人模型選擇</strong>：Webots 提供多種機器人模型，您可以根據需要選擇適合的機器人。在選擇機器人時，請確保其有正確的控制程式並與您的場景相匹配。</p>
</li>
</ol>
<p class="" data-end="67" data-start="30"></p>
<h1>task</h1>
<h2>task3</h2>
<h4>使用 Solvespace 建立<span>平面四連桿</span>系統零組件：</h4>
<p><a href="https://mdecd2025.github.io/hw-41223140/content/task3.html">41223140</a> </p>
<p>下載檔案:<a href="/downloads/四連桿.7z">41223140_fourbar</a></p>
<p>零件繪製影片:<iframe allowfullscreen="allowfullscreen" height="314" src='//www.youtube.com/embed/J4A6IkaGJ4U?si=5WYuKV0yt6zNT0eQ" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen&gt;&lt;/iframe&gt;' width="560"></iframe></p>
<p>零件組裝影片:</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src='//www.youtube.com/embed/9fCbDOSdYFA?si=ewTc09GHj8PmeW4E" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen&gt;&lt;/iframe&gt;' width="560"></iframe></p>
<h1>Exam1</h1>
<p><span style="background-color: #00ffff;">41223138</span></p>
<p>操作影片</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/cZmEA6MmCCc?si=2Mdq69zS-VM7W6WG" title="YouTube video player" width="560"></iframe></p>
<p>轉動影片</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/lD4nYKQezBg?si=CGjY7C-gPRPoVO46" title="YouTube video player" width="560"></iframe></p>
<p><span style="background-color: #00ffff;">41223140</span></p>
<p>檔案下載:<a href="/downloads/41223140_Exam1.7z">41223140_Exam1.7z</a></p>
<p>操作影片:<iframe allowfullscreen="allowfullscreen" height="314" src='//www.youtube.com/embed/stO-ab_Bp1A?si=Lr6Rm3f2VqS5bKD2" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen&gt;&lt;/iframe&gt;' width="560"></iframe></p>
<p>心得:<span>Exam1要利用Webots新增Box建立四連桿，起始的角度是自己的學號最後兩碼。在建立的過程中跟之前的HW1蠻相似的，先在Solvespace畫出連桿的參考圖，把角度換成自己的學號最後兩碼，就可以知道其他的角度。在Webots先建立base，然後設定節點座標，把角度轉成徑度，連桿都設定好之後，導入程式就可以運作了。完成Exam1的速度跟一開始接觸Webots的時候比快了蠻多的，經過很多次的練習，建立四連桿變得比較熟練，但這只是Webots的一小部分。</span></p>
<p><span style="background-color: #00ffff;">41223144</span></p><h1>Exam2</h1>
<p><span style="background-color: #00ffff; color: #000000;">41223138</span></p>
<p>操作影片</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/0wXoUEa9w7I?si=FDyBJkoIvisqQxVC" title="YouTube video player" width="560"></iframe></p>
<p>轉動影片</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/oI66DC2qols?si=rflTPsXZrxLbF_3i" title="YouTube video player" width="560"></iframe></p>
<p></p>
<p><span style="background-color: #00ffff; color: #000000;">41223140</span></p>
<p>檔案下載:<a href="/downloads/41223140_Exam2.7z">41223140_Exam2.7z</a></p>
<p>操作影片:</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src='//www.youtube.com/embed/dNw4Ogn5AWY?si=V3HyXXQPl1Y1PfQ0" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen&gt;&lt;/iframe&gt;' width="560"></iframe></p>
<p>心得:<span>Exam2要在Solvespace畫好自己設計的連桿長度，第一桿長度是100加上自己的學號最後兩碼，其他三根長度自訂，要注意連桿2加連桿3的長度要大於連桿1加連桿4的長度，起始角度是自己的學號最後兩碼，畫好之後組合存成stl檔，利用程式碼轉檔成obj檔，之後導入Webots，看著Solvespace的座標，設定節點座標後，導入程式就可以運作了。這次是利用Webots匯入的功能，要了解如何將stl轉檔成obj檔，才可以順利匯入，跟HW2是一樣的，經過這幾次的練習，有明顯的進步，希望之後可以把學到的運用在其他地方。</span></p>
<p><span style="background-color: #00ffff;">41223144</span></p>
<p></p><h1>Exam3</h1>
<p>Exam3-1:</p>
<p><a href="https://youtu.be/CjUKEBUGzzI">41223140</a></p>
<p>Exam3-2:</p>
<p><a href="https://youtu.be/nqtMerU9ED4">41223140</a></p>
<p>Exam3-3:</p>
<p><a href="https://youtu.be/G323w5Xyfpg">41223140</a></p>
<p>個人網站:</p>
<p><a href="https://mdecd2025.github.io/hw-41223140/content/Exam3.html">41223140</a></p>
<p>Exam3-1:<a href="/downloads/41223140_Exam3-1.7z">Exam3-1.7z</a></p>
<p><span>Exam3-2 :<a href="/downloads/41223140_Exam3-2.7z">Exam3-2.7z</a></span></p>
<p><span>Exam3-3:<a href="/downloads/41223140_Exam3-3.7z">Exam3-3.7z</a></span></p>
<h2>Exam3-1 video</h2>
<h4><strong>Exam3-1</strong></h4>
<p><span style="background-color: #00ffff;">41223138</span></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/3Wo_rkHz_9o?si=bSNoyb1b1NmeBgEd" title="YouTube video player" width="560"></iframe></p>
<p><span style="background-color: #00ffff;">41223140</span><br/><br/><strong><iframe allowfullscreen="allowfullscreen" height="314" src='//www.youtube.com/embed/CjUKEBUGzzI?si=Zh88GVW_I-typhJc" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen&gt;&lt;/iframe&gt;' width="560"></iframe></strong><br/><strong></strong></p>
<p><span style="background-color: #00ffff;">41223144</span></p><h2>Exam3-2 video</h2>
<h4><strong>Exam3-2</strong></h4>
<p><span style="background-color: #00ffff;">41223138</span></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/1SjM4OncL20?si=EdcIl1sSw0y1mL9J" title="YouTube video player" width="560"></iframe></p>
<p><span style="background-color: #00ffff;"></span></p>
<p><span style="background-color: #00ffff;">41223140</span></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src='//www.youtube.com/embed/nqtMerU9ED4?si=BVVM9SRyIVr2bQIi" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen&gt;&lt;/iframe&gt;' width="560"></iframe></p>
<p><span style="background-color: #00ffff;">41223144</span></p><h2>Exam3-3 video</h2>
<h4>Exam3-3</h4>
<p><span style="background-color: #00ffff;">41223138</span></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/d8K3Oka4P8o?si=tzdL6DzeRmy34Rys" title="YouTube video player" width="560"></iframe></p>
<p><span style="background-color: #00ffff;">41223140</span></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src='//www.youtube.com/embed/G323w5Xyfpg?si=MtkUCqqVo2DZhClS" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen&gt;&lt;/iframe&gt;' width="560"></iframe></p>
<p><span style="background-color: #00ffff;">41223144</span></p>
<p></p><h1>Final</h1>
<p><span>期末協同專案執行過程影片、簡報與 PDf 報告檔案 (六人一組) (30%)</span></p>
<p><span>題目: <span style="background-color: #ccffcc;">Webots 動態投籃模擬系統的協同設計</span></span></p>
<p></p>
<p>車子作動影片:</p>
<p></p>
<p>作動影片:</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/i_WFWo_IG7c?si=S1yoOGWjUmBGfuVN" title="YouTube video player" width="560"></iframe></p>
<p>參考檔案:</p>
<p><a href="/downloads/final project.zip">/downloads/final project.zip</a></p>
<p><a href="/downloads/cd2025_w17_rotate_angle.zip">/downloads/cd2025_w17_rotate_angle.zip</a></p>
<p><a href="/downloads/cd2025_w17_move_and_face.zip">/downloads/cd2025_w17_move_and_face.zip</a></p>
<p><a href="/downloads/cd2025_w18_move_and_face.zip">/downloads/cd2025_w18_move_and_face.zip</a></p>
<p></p>
<p><span></span></p>
<p>影片標題: <span style="background-color: #ffff00;">國立虎尾科技大學 - 機械設計工程系 - cd2025 期末報告 - 學員學號 - 各階段影片主題<br/></span></p>
<hr/>
<p></p><h1>Brython</h1>
<p><button>1 add to 100</button></p>
<pre class="brush:cpp;auto-links:false;toolbar:false" contenteditable="false"># 從  Brython 程式庫中的 browser 導入 html, 可用來輸出超文件內容
# 而所導入的 document 可以指向網頁中的特定 id 內容
from browser import html, document
# 建立 url 變數與網站中 2a 學員的學號與帳號資料 URL 網誌字串對應
url = "https://mde.tw/list/2a.txt"
# 利用 open() 物件中的 readlines() 方法, 取出網站中的資料並逐行放入數列中, 因此 data 的資料型別為數列
data = open(url).readlines()
# 進行資料查驗時, 印出 data 數列內容
#print(data)
# 因為學員資料中的第一列為標題, 因此有效資料從索引值 1 開始
all_stud = data[1:]
# 利用 len() 函式查驗 all_stud 數列有幾筆資料, 因為要與前後的字串併接, 因此利用 str() 將整數轉為字串
print("總共有 " + str(len(all_stud)) + "名學員")
# 
# 利用 document[] 取得 id 為 "brython_div1" 的位置, 然後與 brython_div1 變數對應
brython_div1 = document["brython_div1"]
# 利用 Brython 的 "&lt;=" 特殊符號, 將右值帶有字串與超文件內容物件插入 brython_div1 變數所指定的位置
# 其中利用 html.A 建立 anchor 標註物件, 第一個變數為 anchor 字串, 第二個變數則為 hyper text reference
brython_div1 &lt;= "1. " + html.A("2a-ag3", href="https://mdecd2025.github.io/2a-ag3/")+ html.A("(repo)", href="https://github.com/mdecd2025/2a-ag3")
# 利用 html.BR() 插入 break 標註
brython_div1 &lt;= html.BR()
brython_div1 &lt;= "2. " + html.A("41223138", href="https://mdecd2025.github.io/hw-41223138/")+ html.A("(repo)", href="https://github.com/mdecd2025/hw-41223138")
brython_div1 &lt;= html.BR()
brython_div1 &lt;= "3. " + html.A("41223140", href="https://mdecd2025.github.io/hw-41223140/")+ html.A("(repo)", href="https://github.com/mdecd2025/hw-41223140")
brython_div1 &lt;= html.BR()
brython_div1 &lt;= "4. " + html.A("41223143", href="https://mdecd2025.github.io/hw-41223143/")+ html.A("(repo)", href="https://github.com/mdecd2025/hw-41223143")
brython_div1 &lt;= html.BR()
brython_div1 &lt;= "5. " + html.A("41223144", href="https://mdecd2025.github.io/hw-41223144/")+ html.A("(repo)", href="https://github.com/mdecd2025/hw-41223144")

</pre>
<!-- # 從  Brython 程式庫中的 browser 導入 html, 可用來輸出超文件內容
# 而所導入的 document 可以指向網頁中的特定 id 內容
from browser import html, document
# 建立 url 變數與網站中 2a 學員的學號與帳號資料 URL 網誌字串對應
url = "https://mde.tw/list/2a.txt"
# 利用 open() 物件中的 readlines() 方法, 取出網站中的資料並逐行放入數列中, 因此 data 的資料型別為數列
data = open(url).readlines()
# 進行資料查驗時, 印出 data 數列內容
#print(data)
# 因為學員資料中的第一列為標題, 因此有效資料從索引值 1 開始
all_stud = data[1:]
# 利用 len() 函式查驗 all_stud 數列有幾筆資料, 因為要與前後的字串併接, 因此利用 str() 將整數轉為字串
print("總共有 " + str(len(all_stud)) + "名學員")
# 
# 利用 document[] 取得 id 為 "brython_div1" 的位置, 然後與 brython_div1 變數對應
brython_div1 = document["brython_div1"]
# 利用 Brython 的 "<=" 特殊符號, 將右值帶有字串與超文件內容物件插入 brython_div1 變數所指定的位置
# 其中利用 html.A 建立 anchor 標註物件, 第一個變數為 anchor 字串, 第二個變數則為 hyper text reference
brython_div1 <= "1. " + html.A("2a-ag4", href="https://mdecd2025.github.io/2a-ag4/")+ html.A("(repo)", href="https://github.com/mdecd2025/2a-ag4")
# 利用 html.BR() 插入 break 標註
brython_div1 <= html.BR()
brython_div1 <= "2. " + html.A("41223118", href="https://mdecd2025.github.io/hw-zhe41223118/")+ html.A("(repo)", href="https://github.com/mdecd2025/hw-zhe41223118")
brython_div1 <= html.BR()
brython_div1 <= "3. " + html.A("41223122", href="https://mdecd2025.github.io/hw-41223122/")+ html.A("(repo)", href="https://github.com/mdecd2025/hw-41223122")
brython_div1 <= html.BR()
brython_div1 <= "4. " + html.A("41223131", href="https://mdecd2025.github.io/hw-41223131/")+ html.A("(repo)", href="https://github.com/mdecd2025/hw-41223131")
brython_div1 <= html.BR()
brython_div1 <= "5. " + html.A("41223134", href="https://mdecd2025.github.io/hw-41223134/")+ html.A("(repo)", href="https://github.com/mdecd2025/hw-41223134")
brython_div1 <= html.BR()
brython_div1 <= "6. " + html.A("41223136", href="https://mdecd2025.github.io/hw-41223136/")+ html.A("(repo)", href="https://github.com/mdecd2025/hw-41223136")
brython_div1 <= html.BR()
brython_div1 <= "7. " + html.A("41223158", href="https://mdecd2025.github.io/hw-41223158/")+ html.A("(repo)", href="https://github.com/mdecd2025/hw-41223158")
 -->
<p>
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
</p>
<!-- 啟動 Brython -->
<p>
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
</p>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="/static/Cango-24v03-min.js"></script>
<script src="/static/gearUtils-09.js"></script>
<script src="/static/SVGpathUtils-6v03-min.js"></script>
<script src="/static/sylvester.js"></script>
<script src="/static/PrairieDraw.js"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
</p>
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add(ev):
    Ace2.editor.setValue(add_src)
    Ace2.editor.scrollToRow(0)
    Ace2.editor.gotoLine(0)
    Ace2.run()

# id 為 "add1to100" 的按鈕點按時, 執行 add 方法
doc["add1to100"].bind('click', add)
</script>
</p>
<p><!-- add 1 to 100 結束--></p>
<!-- editor1 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div1"></div>
<!-- editor1 結束 --><hr/><!-- ########################################## -->
<p>從 1 累加到 100 part2:</p>
<p><button id="add1to100part2">1 add to 100</button><button id="cango_three_gears">cango_three_gears</button><button id="bsnake">BSnake</button><button id="aitetris">AI Tetris</button></p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()
Ace3 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run2():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src2"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace3.editor.setValue(prog)
    Ace3.editor.scrollToRow(0)
    Ace3.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace3.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run2'].bind('click', Ace3.run)
doc['kw_show_console2'].bind('click', Ace3.show_console)
doc['kw_clear_console2'].bind('click', Ace3.clear_console)
doc['clear_bd2'].bind('click', clear_bd2)
# 呼叫函式執行
run2()
</script>
</p>
<p><!-- add 1 to 100 part2 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace4 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )

# 透過 Ace4 以類別建立一個通用的 button2, 可以在多個案例中將 gist 程導入編輯區

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace4.editor.setValue(open(self.url).read())
        Ace4.editor.scrollToRow(0)
        Ace4.editor.gotoLine(0)
        Ace4.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add2(ev):
    Ace4.editor.setValue(add_src)
    Ace4.editor.scrollToRow(0)
    Ace4.editor.gotoLine(0)
    Ace4.run()

# id 為 "add1to100part2" 的按鈕點按時, 執行 add 方法
doc["add1to100part2"].bind('click', add2)
# 以下為運用 button2 class 的通用 gist 程式導入區
################################## cango_three_gears start
cango_three_gears_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/cango_three_gears_brython_div2.py"
cango_three_gears = button2(cango_three_gears_url)
doc["cango_three_gears"].bind("click", cango_three_gears.do)
################################## cango_three_gears end
################################## bsnake start
bsnake_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/kmol_snakey.py"
bsnake = button2(bsnake_url)
doc["bsnake"].bind("click", bsnake.do)
################################## bsnake end
################################## aitetris start
aitetris_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/pygame_to_brython_tetris_ai.py"
aitetris = button2(aitetris_url)
doc["aitetris"].bind("click", aitetris.do)
################################## aitetris end
</script>
</p>
<p><!-- add 1 to 100 part2 結束--></p>
<!-- editor2 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor2" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename2" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src2', 'kw_filename2');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run2">Run</button> <button id="kw_show_console2">Output</button> <button id="kw_clear_console2">清除輸出區</button><button id="clear_bd2">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console2"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div2"></div>
<!-- editor2 結束 --><hr/>
<p>
<script src="https://unpkg.com/three@0.144.0/build/three.js" type="text/javascript"></script>
</p>